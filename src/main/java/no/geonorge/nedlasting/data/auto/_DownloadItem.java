package no.geonorge.nedlasting.data.auto;

import org.apache.cayenne.CayenneDataObject;

import no.geonorge.nedlasting.data.DownloadOrder;
import no.geonorge.nedlasting.data.Projection;

/**
 * Class _DownloadItem was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _DownloadItem extends CayenneDataObject {

    public static final String FILE_ID_PROPERTY = "fileId";
    public static final String FILE_NAME_PROPERTY = "fileName";
    public static final String METADATA_UUID_PROPERTY = "metadataUuid";
    public static final String URL_PROPERTY = "url";
    public static final String ORDER_PROPERTY = "order";
    public static final String PROJECTION_PROPERTY = "projection";

    public static final String ORDER_ITEM_ID_PK_COLUMN = "ORDER_ITEM_ID";

    public void setFileId(String fileId) {
        writeProperty(FILE_ID_PROPERTY, fileId);
    }
    public String getFileId() {
        return (String)readProperty(FILE_ID_PROPERTY);
    }

    public void setFileName(String fileName) {
        writeProperty(FILE_NAME_PROPERTY, fileName);
    }
    public String getFileName() {
        return (String)readProperty(FILE_NAME_PROPERTY);
    }

    public void setMetadataUuid(String metadataUuid) {
        writeProperty(METADATA_UUID_PROPERTY, metadataUuid);
    }
    public String getMetadataUuid() {
        return (String)readProperty(METADATA_UUID_PROPERTY);
    }

    public void setUrl(String url) {
        writeProperty(URL_PROPERTY, url);
    }
    public String getUrl() {
        return (String)readProperty(URL_PROPERTY);
    }

    public void setOrder(DownloadOrder order) {
        setToOneTarget(ORDER_PROPERTY, order, true);
    }

    public DownloadOrder getOrder() {
        return (DownloadOrder)readProperty(ORDER_PROPERTY);
    }


    public void setProjection(Projection projection) {
        setToOneTarget(PROJECTION_PROPERTY, projection, true);
    }

    public Projection getProjection() {
        return (Projection)readProperty(PROJECTION_PROPERTY);
    }


}
